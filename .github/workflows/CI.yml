name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Stop api-sadin-dev
      run: appcmd stop sites "api-sadin-dev"
    - name: Publish Release
      run: dotnet publish --configuration Release -o C:\sites\sadin-dev\api
    - name: Start api-sadin-dev
      run: appcmd start sites "api-sadin-dev"


# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:    
#     runs-on: [self-hosted]
#     steps:
#     - uses: actions/checkout@v1
#     - name: Set up .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: '8.0.x'
#     - name: Build with dotnet
#       run: dotnet build --configuration Release

#   test:
#     needs: build
#     runs-on: [self-hosted]

#     steps:
#     - name: Test
#       run: dotnet test

#   deploy:
#     needs: test
#     runs-on: [self-hosted]
    
#     steps:
#     - name: Project publish
#       run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/api-sadin-dev

    # - name: Deploy to IIS
    #   run: |
    #     if ((Get-WebSiteState -Name api-sadin-dev).Value -eq "Started")
    #     {
    #         Stop-WebSite -Name api-sadin-dev
    #         echo "Stopped Website api-sadin-dev"
    #     }
    #     if ((Get-WebAppPoolState -Name api-sadin-dev).Value -eq "Started")
    #     {
    #         Stop-WebAppPool -Name api-sadin-dev
    #         echo "Stopped Application Pool api-sadin-dev"
    #     }
        
    #     Start-Sleep -s 15        
    #     Copy-Item ${{env.DOTNET_ROOT}}/api-sadin-dev/* ${{ secrets.API_DEPLOYMENT_PATH }} -Recurse -Force
        
    #     if ((Get-WebSiteState -Name api-sadin-dev).Value -eq "Stopped")
    #     {
    #         Start-WebSite -Name api-sadin-dev
    #         echo "Started Website api-sadin-dev"
    #     }
    #     if ((Get-WebAppPoolState -Name api-sadin-dev).Value -eq "Stopped")
    #     {
    #         Start-WebAppPool -Name api-sadin-dev
    #         echo "Started Application Pool api-sadin-dev"
    #     }
        
    #     if ($lastexitcode -lt 8) { $global:lastexitcode = 0 }
